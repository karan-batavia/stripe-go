# frozen_string_literal: true
# typed: true

require_relative './capybara_workarounds'

class ApplicationSystemTest < ActionDispatch::SystemTestCase
  driven_by :selenium_chrome_driver

  # include StripeSuiteTestHelpers::WaitForAjax
  include Critic::CapybaraWorkarounds
  # include Capybara::Screenshot::MiniTestPlugin
  # include StripeSuiteTestHelpers::Common


  # don't use standard setup/teardown here because of DB `truncation` strategy

  def setup
    super

    # https://github.com/resque/resque-scheduler/pull/602
    # redis.redis.flushdb

    # inline_job_processing!

    DatabaseCleaner.clean_with(:truncation)

    KMSEncryptionTestHelpers.restore_encryption_fields(StripeForce::User)

    # StripeSuite::Metrics::Writer.instance.timer.shutdown
    # StripeSuite::Metrics::Writer.instance.queue.clear

    # output current test, useful for debugging which fail because of CI timeout limits
    puts self.location

    # something, somewhere, is setting this to true although the default is false!
    Capybara.always_include_port = false

    host! server_host
  end

  def check_for_content_security_policy_errors!
    # originally pulled log extraction logic from:
    # https://gist.github.com/zdennis/7ff21bbf663ee6a09984c64ac703bc3b
    all_logs = page.driver.browser.manage.logs.get(:browser)

    # our application is NOT configured as report only, CSP errors containing that string are generated by another iframe
    csp_errors = all_logs
      .select {|l| l.level == "SEVERE" }
      .select {|l| l.message =~ /Content Security Policy/ && l.message !~ /\[Report Only\]/ && l.message !~ %r{Refused to load the image \'https://hooks.stripe.com/img/favicon.png\' because it violates} }

    assert_empty(csp_errors)
  end

  def teardown
    super

    # don't clear with transaction: this prevents modifications to DB data from
    # being reflected in the test server's DB since it's in a different thread
    # and not wrapped in the same transaction

    DatabaseCleaner.clean_with(:truncation)

    check_for_content_security_policy_errors!

    Capybara.reset_sessions!
    Capybara.use_default_driver
  end

  def server_host
    if ENV['CI']
      'https://stripe-netsuite-test.dev'
    else
      if Rails.application.config.force_ssl
        "https://lvh.me/"
      else
        "http://lvh.me:#{Capybara.server_port}/"
      end
    end
  end
end
