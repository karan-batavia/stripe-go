#!/bin/bash

set -eu -o pipefail

if [ -z "$CI" ]; then
  echo "This should only be run on CircleCI"
  exit 1
fi

if ! command -v sfdx &> /dev/null
then
  echo "SFDX is not installed please follow this link to install"
  echo "https://developer.salesforce.com/docs/atlas.en-us.234.0.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli.htm"
  exit 1
else
  echo "sfdx version installed:"
  sfdx --version
fi

./sfdx/bin/extract-private-key

cd sfdx
export SFDX_IMPROVED_CODE_COVERAGE=true

# ensure the same deploy approach is used to deploy locally, otherwise you'll run into strange errors
sfdx config:set restDeploy=true

# grab a `accessToken` from a auth'd account in ~/.sfdx/ to test this logic locally
# `sfdx auth:logout -u alias` to remove the org so can reauth

function authorize {
  username=$1
  salesforceAlias=$(echo "$username" | perl -nle 'm/\+([^@]+)/; print $1')
  echo "Authorizing using alias: $salesforceAlias"
  sfdx auth:jwt:grant --clientid $SF_CONSUMER_KEY --jwtkeyfile=./private.key --username="$username" --setalias="$salesforceAlias"
}

# https://circleci.com/developer/orbs/orb/circleci/salesforce-apex#commands-source-push

function deploySource {
  orgAlias=$1
  echo '\nDeploying source...'

  # make sure the same API version is used for local deployments, otherwise you'll run into weird errors
  # for some reason, the `sfdx config:set apiVersion=52.0` doesn't work and gets overwritten

  sfdx force:source:deploy -p force-app/main/default/ --apiversion=54.0 -u $orgAlias
}

function runTests {
  orgAlias=$1
  echo '\nRunning tests...'
  mkdir -p test-results
  sfdx force:apex:test:run --codecoverage --testlevel RunLocalTests -u $orgAlias --resultformat human --outputdir=test-results
}

# NOTE this is not strictly associated with our test, but is important to ensure the test data
#      created in future tests does not clog up our test accounts and create a storage limit error
function deleteTestData {
  orgAlias=$1
  echo '\nDeleting all test data...'
  sfdx force:apex:execute -f bin/delete_test_record_data.apex -u $orgAlias
}

authorize "$1"
deploySource "$1"
runTests "$1"
deleteTestData "$1"